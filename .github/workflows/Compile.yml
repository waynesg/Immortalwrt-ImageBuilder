name: Build OpenWrt Firmware

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt-get install -y build-essential libncurses5-dev libncursesw5-dev \
                                zlib1g-dev gawk genisoimage git gettext libssl-dev xsltproc rsync wget \
                                unzip python3

    - name: Download ImageBuilder
      run: |
        mkdir -p build && cd build
        wget https://mirrors.aliyun.com/openwrt/releases/24.10.2/targets/x86/64/openwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64.tar.zst
        tar --use-compress-program=unzstd -xvf openwrt-imagebuilder-*.tar.zst
        mv openwrt-imagebuilder-24.10.2-x86-64.Linux-x86_64 imagebuilder

    - name: Prepare custom IPK packages
      run: |
        cd $GITHUB_WORKSPACE
        bash prepare-packages.sh

    - name: Upload packages_names.txt
      uses: actions/upload-artifact@v4
      with:
        name: ipk-package-list
        path: packages_names.txt

    - name: Copy files and packages to ImageBuilder
      run: |
        cp -r files build/imagebuilder/files
        mkdir -p build/imagebuilder/packages/custom
        cp -v packages/*.ipk build/imagebuilder/packages/custom/
        cp packages_names.txt build/imagebuilder/ 

    - name: Copy .config (optional)
      run: |
        cp -v .config build/imagebuilder/.config || echo "No custom .config found"

    - name: Run build.sh
      run: |
        cd build/imagebuilder
        bash $GITHUB_WORKSPACE/build.sh

    - name: Archive firmware
      run: |
        mkdir -p output
        find build/imagebuilder/bin/targets/ -type f \( -name "*.img.gz" -o -name "*.bin" -o -name "*.tar.gz" \) -exec cp -v {} output/ \;
        sha256sum output/* > output/sha256sums.txt
    
    - name: Upload firmware artifact
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-firmware
        path: output/
